t.values <- seq(-4.5,4.5,.1)
t.probability <- dt(t.values,df=6)
all <- tibble(val=t.values,prob=t.probability)
library(tidyverse)
t.values <- seq(-4.5,4.5,.1)
t.probability <- dt(t.values,df=6)
all <- tibble(val=t.values,prob=t.probability)
cut <- tibble(val=t.values[1:75],prob=t.probability[1:75])
ggplot()+
geom_line(data=all, aes(x=val,y=prob))+
geom_area(data=cut,aes(x=val,y=prob))+
theme_light()+
labs(x="t",y="P(t≤T)")+
geom_vline(xintercept = 2.9, linetype="dashed", color='grey')+
geom_text(aes(x=3,y=0.1, label="T"))+
scale_y_continuous(expand = c(0,0)) + scale_x_continuous(expand = c(0,0))
t.values <- seq(-4.5,4.5,.1)
t.probability <- dt(t.values,df=6)
all <- tibble(val=t.values,prob=t.probability)
cut <- tibble(val=t.values[1:75],prob=t.probability[1:75])
ggplot()+
geom_line(data=all, aes(x=val,y=prob))+
geom_area(data=cut,aes(x=val,y=prob))+
theme_light()+
labs(x="t",y="P(t≤T)")+
geom_vline(xintercept = 2.9, linetype="dashed", color='grey')+
geom_text(aes(x=3,y=0.1, label="T"))+
scale_y_continuous(expand = c(0,0)) + scale_x_continuous(expand = c(0,0))
x <- list(mean(),3)
?list
as.list(mean())
as.list(mean)
sqrt
sum(1,3,4)
sum
names
t.test
list(3,t.test,c("a",tibble(x=5,y=7)))
y <- list(1, c("a","あ"), list(1+3i, c(FALSE, NA, TRUE)))
y
y <- list(1, c("a","あ"), list(1+3i, c(FALSE, NA, TRUE)),
tibble(x = c("阿拉木图", "乌斯季-卡缅诺戈尔斯克", "什切青"), y = c(1, 2, 3)),
t.test)
y
z <- list(z1 = c(1, 2, 3), z2 = c(4, 5, 6))
z$z2
z <- list(z1 = c(1, 2, 3), z2 = c(4, 5, 6))
z$z2 == z[[2]]
z <- list(z1 = c(1, 2, 3), z2 = c(4, 5, 6))
z
z$z2 == z[[2]]
z <- list(z1 = c(1, 2, 3), z2 = c(4, 5, 6)， c(7, 8))
z <- list(z1 = c(1, 2, 3), z2 = c(4, 5, 6), c(7, 8))
z
z$z2 == z[[2]] #
z <- list(c(1, 3), z2 = c(4, 5, 6), c(7, 8))
z #
z$z2 == z[[2]] #
z <- list(c(1, 3), z2 = c(4, 5, 6), c("a", "b"))
z # `[[2]]`被`$z2`所取代
z$z2 == z[[2]] # `z[[2]]`仍然是可用的，结果和`z$z2`一样
m <- list(1,2,3,4)
m <- dim(c(2,2))
m
dim()
dim(m)
m <- list(1,2,3,4)
dim(2,3)
dim(c(2,2))
c(1,2,3,4) <- dim(c(2,2))
x <- c(1,2,3,4)
x <- dim(c(2,2))
x
x <- c(1,2,3,4)
dim(x) <- c(2,2)
x
x <- list(1,2,3,4)
x
dim(x) <- c(2,2)
x
class(x)
library(tidyverse)
mpg
mpg[ ,4
mpg[ ,4]
mpg[3,4]
mpg[3,4]
as.vector(mpg[3,4])
as.numeric(mpg[3,4])
as_vector(mpg[3,4])
globalenv()
Sys.getlocale()
globalVariables()
ls()
mpg[3, ]
select(mpg, 3)
Rmlfun <- function(x) {
sumx <- sum(x)
n <- length(x)
function(mu) n * log(mu) - mu * sumx
}
rexp(1000)
hist(rexp(100000))
?rexp
evn1 <- Rmlfun(rexp(10000))
evn1
curve(evn1(x), 0,5)
curve(evn1(x), -5,5)
curve(evn1(x), 0,5)
curve(evn1(x), 0,10)
curve(evn1(x), 0,5)
Rmklike <- function(data) {
n = length(data)
sumx = sum(data)
lfun = function(mu) n * log(mu) - mu * + sumx
score = function(mu) n/mu - sumx + d2 = function(mu) -n/mu^2
list(lfun = lfun, score = score, d2 = d2)
}
Rmklike(rexp(100))
Rmklike <- function(data) {
n = length(data)
sumx = sum(data)
lfun = function(mu) n * log(mu) - mu * + sumx
score = function(mu) n/mu - sumx + d2 = function(mu) -n/mu^2
d2 = function(mu) -n/mu^2
list(lfun = lfun, score = score, d2 = d2)
}
Rmklike(rexp(100))
lfun <- Rmklike(rexp(100))
lfun$score
lfun$score(3)
Rmklike <- function(data) {
n = length(data)
sumx = sum(data)
lfun = function(mu) n * log(mu) - mu * + sumx
score = function(mu) n/mu - sumx
d2 = function(mu) -n/mu^2
list(lfun = lfun, score = score, d2 = d2)
}
lfun <- Rmklike(rexp(100))
lfun$score(3)
curve(lfun$score(x), 0,5)
hline
abline(v = 0)
abline(h = 0)
curve(lfun$score(x), 0,5)
abline(h = 0)
abline(h = 0, v = 1)
lfun <- Rmklike(rexp(10000))
curve(lfun$score(x), 0,5)
abline(h = 0, v = 1)
